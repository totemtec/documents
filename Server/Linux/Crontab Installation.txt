CentOS 7.1 测试通过

1. 确认crontab是否安装：
执行 crontab 命令如果报 command not found，就表明没有安装

2. 安装 crontab
# yum install cronie

3. 启动crontab
# systemctl start crond.service


查看crontab服务状态：
# systemctl status crond.service

在CentOS系统中加入开机自动启动:
# systemctl enable crond.service

# systemctl start crond.service //启动服务
# systemctl stop crond.service //关闭服务
# systemctl restart crond.service //重启服务
# systemctl reload crond.service //重新载入配置




CentOS系统 crontab命令

功能说明：设置计时器。

语法：crontab [-u <用户名称>][配置文件] 或 crontab [-u <用户名称>][-elr]

补充说明：cron是一个常驻服务，它提供计时器的功能，让用户在特定的时间得以执行预设的指令或程序。只要用户会编辑计时器的配置文件，就可以使 用计时器的功能。其配置文件格式如下：Minute Hour Day Month DayOFWeek Command

参数： 
-e 　编辑该用户的计时器设置。 
-l 　列出该用户的计时器设置。 
-r 　删除该用户的计时器设置。 
-u<用户名称> 　指定要设定计时器的用户名称。

在CentOS系统中，以上步骤就完成了安装crontab的安装工作。





2，crontab 格式

基本格式 :
* * * * * command
分 時 日 月 周 命令

# crontab基本格式
# +---------------- minute  分钟(0 - 59)
# |  +------------- hour    小时(0 - 23)
# |  |  +---------- day     日期(1 - 31)
# |  |  |  +------- month   月份(1 - 12)
# |  |  |  |  +---- week    星期(0 - 7) (星期天=0 or 7)
# |  |  |  |  |
# *  *  *  *  *  要运行的命令

第1列表示分鐘1～59 每分鐘用*或者 */1表示
第2列表示小時1～23（0表示0點）
第3列表示日期1～31
第4列表示月份1～12
第5列標識號星期0～6（0表示星期天）
第6列要運行的命令

* 该域所有可能的取值范围内执行
a-b表示从第a分钟到第b分钟这段时间内要执行
a,b,c表示第a分钟，第b分钟，第c分钟要执行
*/n 表示每n分钟个时间间隔执行一次



crontab文件的一些例子：

30 21 * * * /usr/local/etc/rc.d/lighttpd restart
上面的例子表示每晚的21:30重啟apache。

45 4 11022 * * /usr/local/etc/rc.d/lighttpd restart
上面的例子表示每月1、10、22日的4 : 45重啟apache。

10 1 * * 60 /usr/local/etc/rc.d/lighttpd restart
上面的例子表示每周六、周日的1 : 10重啟apache。

030 18-23 * * * /usr/local/etc/rc.d/lighttpd restart
上面的例子表示在每天18 : 00至23 : 00之間每隔30分鐘重啟apache。

0 23 * * 6 /usr/local/etc/rc.d/lighttpd restart
上面的例子表示每星期六的11 : 00 pm重啟apache。

* */1 * * * /usr/local/etc/rc.d/lighttpd restart
每一小時重啟apache

* 23-7/1 * * * /usr/local/etc/rc.d/lighttpd restart
晚上11點到早上7點之間，每隔一小時重啟apache

0 11 4 * mon-wed /usr/local/etc/rc.d/lighttpd restart

每月的4號與每周一到周三的11點重啟apache

 

0 4 1 jan * /usr/local/etc/rc.d/lighttpd restart
一月一號的4點重啟apache

*/30 * * * * /usr/sbin/ntpdate 210.72.145.44
每半小時同步一下時間



crontab不能正常执行的五种原因

1 crond服务未启动

crontab不是Linux内核的功能，而是依赖一个crond服务，这个服务可以启动当然也可以停止。如果停止了就无法执行任何定时任务了，解决的方法是启动crond服务:

2 权限问题

比如：脚本没有x执行权限，解决方法：

增加执行权限，或者用bash abc.sh的方法执行

3 路径问题

有的命令在shell中执行正常，但是在crontab执行却总是失败。有可能是因为crontab使用的sh未正确识别路径，比如：以root身份登录shell后执行一个/root/test.sh，只要执行

./test.sh

就可以了。但是在crontab中，就会找不到这个脚本，比如写完整：

/root/test.sh

4 时差问题

因为服务器与客户端时差问题，所以crontab的时间以服务器时间为准。

5 变量问题

有时候命令中含有变量，但crontab执行时却没有，也会造成执行失败。
